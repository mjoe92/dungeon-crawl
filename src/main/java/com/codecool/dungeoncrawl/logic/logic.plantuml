@startuml

title __LOGIC's Class Diagram__\n

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      class com.codecool.dungeoncrawl.logic.Cell {
          - actorCanStand : boolean
          - x : int
          - y : int
          + getActor()
          + getDoor()
          + getItem()
          + getNeighbor()
          + getTileName()
          + getType()
          + getX()
          + getY()
          + isActorCanStand()
          + setActor()
          + setActorCanStand()
          + setDoor()
          + setItem()
          + setTileName()
          + setType()
          ~ Cell()
      }
    }
  }
  

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      enum CellType {
        BONES
        CLOSEDDOOR
        CROSS
        EMPTY
        FLOOR
        OPENEDDOOR
        POTION_FULL
        POTION_HALF
        STAIRS
        WALL
        canActorStand
        tileName
      }
    }
  }
  

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      class com.codecool.dungeoncrawl.logic.Cheats {
          - triggerNames : String[]
          + activateCheat()
      }
    }
  }
  

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      interface com.codecool.dungeoncrawl.logic.Drawable {
          {abstract} + getTileName()
      }
    }
  }
  

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      class com.codecool.dungeoncrawl.logic.GameMap {
          - cells : Cell[][]
          - height : int
          {static} - monsters : ArrayList<Actor>
          {static} - player : Player
          - width : int
          + GameMap()
          + getCell()
          + getHeight()
          + getMonsters()
          + getPlayer()
          + getWidth()
          + putMonster()
          + removeMonster()
          + removePlayer()
          + setMonsters()
          + setPlayer()
      }
    }
  }
  

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      class com.codecool.dungeoncrawl.logic.MapLoader {
          {static} + loadMap()
      }
    }
  }
  

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      class com.codecool.dungeoncrawl.logic.SpecialRules {
      }
    }
  }
  

  namespace com.codecool.dungeoncrawl {
    namespace logic {
      enum changeActorCanStand {
        GHOST_ON_EMPTY
        GHOST_ON_WALL
        actorName
        canPass
        type
      }
    }
  }
  

  com.codecool.dungeoncrawl.logic.Cell .up.|> com.codecool.dungeoncrawl.logic.Drawable
  com.codecool.dungeoncrawl.logic.Cell o-- com.codecool.dungeoncrawl.logic.actors.Actor : actor
  com.codecool.dungeoncrawl.logic.Cell o-- com.codecool.dungeoncrawl.logic.door.Door : door
  com.codecool.dungeoncrawl.logic.Cell o-- com.codecool.dungeoncrawl.logic.GameMap : gameMap
  com.codecool.dungeoncrawl.logic.Cell o-- com.codecool.dungeoncrawl.logic.items.Items : item
  com.codecool.dungeoncrawl.logic.Cell o-- com.codecool.dungeoncrawl.logic.CellType : type
  com.codecool.dungeoncrawl.logic.SpecialRules +-down- com.codecool.dungeoncrawl.logic.SpecialRules.changeActorCanStand
  com.codecool.dungeoncrawl.logic.SpecialRules.changeActorCanStand o-- com.codecool.dungeoncrawl.logic.CellType : type


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
